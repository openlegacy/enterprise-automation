steps:
  - name: gcr.io/cloud-builders/git
    args:
      - "-c"
      - >
        git clone --branch $BRANCH_NAME
        https://$$GITHUB_TOKEN@github.com/openlegacy/enterprise-automation.git
        /workspace/enterprise-automation
    id: Git-Clone
    entrypoint: bash
    secretEnv:
      - GITHUB_TOKEN
  - name: "ubuntu:latest"
    args:
      - "-c"
      - >
        # Update package lists and install required tools

        apt-get update

        apt-get install -y curl jq apt-transport-https gnupg2
        software-properties-common wget tar unzip gettext


        # Install kubectl

        curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key
        add -

        echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee -a
        /etc/apt/sources.list.d/kubernetes.list

        apt-get update

        apt-get install -y kubectl


        # Install OpenShift CLI (oc)

        OC_VERSION="4.13.0"

        wget
        https://mirror.openshift.com/pub/openshift-v4/clients/ocp/$${OC_VERSION}/openshift-client-linux.tar.gz

        tar -xzf openshift-client-linux.tar.gz -C /usr/local/bin oc kubectl

        chmod +x /usr/local/bin/oc

        rm openshift-client-linux.tar.gz

        echo "Installed OpenShift CLI version:"

        oc version


        # Install Helm

        curl https://baltocdn.com/helm/signing.asc | apt-key add -

        echo "deb https://baltocdn.com/helm/stable/debian/ all main" | tee
        /etc/apt/sources.list.d/helm-stable-debian.list

        apt-get update

        apt-get install -y helm


        # Install OpenSSL

        apt-get install -y openssl


        # Navigate to the directory

        cd /workspace/enterprise-automation


        # Login to OpenShift first (this sets the kubectl context)

        oc login --token=sha256~E4OrOfDhRvBZfxQgVyOe2dV7EYw0SdpGa1ULvljPYbQ
        --server=https://api.cluster07.ol-ocp.sdk-hub.com:6443
        --insecure-skip-tls-verify=true



        # Make script executable and run it

        chmod +x script.sh

        ./script.sh
    id: Run-Installer-Script
    entrypoint: bash
  - name: gcr.io/cloud-builders/curl
    args:
      - "-c"
      - |
        curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\": \"*Build:* $BUILD_ID\n*Environment:* $TRIGGER_NAME\n*Branch:* $BRANCH_NAME\n*Hub Enterprise installation completed.*\"}" \
          $$SLACK_WEBHOOK
    id: Slack-Notification
    entrypoint: bash
    secretEnv:
      - SLACK_WEBHOOK
timeout: 1800s
options:
  logging: CLOUD_LOGGING_ONLY
availableSecrets:
  secretManager:
    - versionName: projects/qa-automation-hub-api-poc/secrets/GITHUB_TOKEN/versions/latest
      env: GITHUB_TOKEN
    - versionName: projects/qa-automation-hub-api-poc/secrets/SLACK_WEBHOOK/versions/latest
      env: SLACK_WEBHOOK
